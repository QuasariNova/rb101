In this hash of people and their age,

  ages = { "Herman" => 32, "Lily" => 30, "Grandpa" => 402, "Eddie" => 10 }

see if "Spot" is present.

Bonus: What are two other hash methods that would work just as well for this
solution?

----

ages.key? "Spot"
ages.has_key? "Spot"
ages.include? "Spot"
ages.member? "Spot"
ages["Spot"] # truthy/falsy, is nil if it's not in hash by default

================================================================================

Starting with this string:

  munsters_description = "The Munsters are creepy in a good way."

Convert the string in the following ways (code will be executed on original munsters_description above):

  "tHE mUNSTERS ARE CREEPY IN A GOOD WAY."
  "The munsters are creepy in a good way."
  "the munsters are creepy in a good way."
  "THE MUNSTERS ARE CREEPY IN A GOOD WAY."

----

  munsters_description.swapcase!
  munsters_description.capitalize!
  munsters_description.downcase!
  munsters_description.upcase!

================================================================================

We have most of the Munster family in our age hash:

  ages = { "Herman" => 32, "Lily" => 30, "Grandpa" => 5843, "Eddie" => 10 }

add ages for Marilyn and Spot to the existing hash

  additional_ages = { "Marilyn" => 22, "Spot" => 237 }

----

ages.merge! additional_ages
